/Users/dev/personal/job-flow-applicant-view git:[main]
npm run build

> nextjs-job-flow-app@0.1.0 build
> next build

 ⚠ Invalid next.config.js options detected: 
 ⚠     Unrecognized key(s) in object: 'appDir' at "experimental"
 ⚠ See more info here: https://nextjs.org/docs/messages/invalid-next-config
  ▲ Next.js 14.2.29
  - Environments: .env

   Creating an optimized production build ...
<w> [webpack.cache.PackFileCacheStrategy] Serializing big strings (205kiB) impacts deserialization performance (consider using Buffer instead and decode when needed)
<w> [webpack.cache.PackFileCacheStrategy] Serializing big strings (205kiB) impacts deserialization performance (consider using Buffer instead and decode when needed)
<w> [webpack.cache.PackFileCacheStrategy] Serializing big strings (205kiB) impacts deserialization performance (consider using Buffer instead and decode when needed)
<w> [webpack.cache.PackFileCacheStrategy] Serializing big strings (206kiB) impacts deserialization performance (consider using Buffer instead and decode when needed)
Failed to compile.

./src/components/ui/label.tsx
Error: 
  x the name `cva` is defined multiple times
    ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/label.tsx:1:1]
  1 | import * as React from "react"
  2 | import * as LabelPrimitive from "@radix-ui/react-label"
  3 | import { cva, type VariantProps } from "class-variance-authority"
    :          ^|^
    :           `-- previous definition of `cva` here
  4 | 
  5 | import { cn } from "@/lib/utils"
  6 | 
  7 | const labelVariants = cva(
  8 |   "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
  9 | )
 10 | 
 11 | const Label = React.forwardRef<
 12 |   React.ElementRef<typeof LabelPrimitive.Root>,
 13 |   React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
 14 |     VariantProps<typeof labelVariants>
 15 | >(({ className, ...props }, ref) => (
 16 |   <LabelPrimitive.Root
 17 |     ref={ref}
 18 |     className={cn(labelVariants(), className)}
 19 |     {...props}
 20 |   />
 21 | ))
 22 | Label.displayName = LabelPrimitive.Root.displayName
 23 | 
 24 | export { Label }
 25 | "use client"
 26 | 
 27 | import * as React from "react"
 28 | import * as LabelPrimitive from "@radix-ui/react-label"
 29 | import { cva, type VariantProps } from "class-variance-authority"
    :          ^|^
    :           `-- `cva` redefined here
 30 | import { cn } from "@/lib/utils"
 31 | 
 32 | const labelVariants = cva(
    `----

  x the name `cn` is defined multiple times
    ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/label.tsx:2:1]
  2 | import * as LabelPrimitive from "@radix-ui/react-label"
  3 | import { cva, type VariantProps } from "class-variance-authority"
  4 | 
  5 | import { cn } from "@/lib/utils"
    :          ^|
    :           `-- previous definition of `cn` here
  6 | 
  7 | const labelVariants = cva(
  8 |   "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
  9 | )
 10 | 
 11 | const Label = React.forwardRef<
 12 |   React.ElementRef<typeof LabelPrimitive.Root>,
 13 |   React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
 14 |     VariantProps<typeof labelVariants>
 15 | >(({ className, ...props }, ref) => (
 16 |   <LabelPrimitive.Root
 17 |     ref={ref}
 18 |     className={cn(labelVariants(), className)}
 19 |     {...props}
 20 |   />
 21 | ))
 22 | Label.displayName = LabelPrimitive.Root.displayName
 23 | 
 24 | export { Label }
 25 | "use client"
 26 | 
 27 | import * as React from "react"
 28 | import * as LabelPrimitive from "@radix-ui/react-label"
 29 | import { cva, type VariantProps } from "class-variance-authority"
 30 | import { cn } from "@/lib/utils"
    :          ^|
    :           `-- `cn` redefined here
 31 | 
 32 | const labelVariants = cva(
 33 |   "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
    `----

  x the name `labelVariants` is defined multiple times
    ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/label.tsx:4:1]
  4 | 
  5 | import { cn } from "@/lib/utils"
  6 | 
  7 | const labelVariants = cva(
    :       ^^^^^^|^^^^^^
    :             `-- previous definition of `labelVariants` here
  8 |   "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
  9 | )
 10 | 
 11 | const Label = React.forwardRef<
 12 |   React.ElementRef<typeof LabelPrimitive.Root>,
 13 |   React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
 14 |     VariantProps<typeof labelVariants>
 15 | >(({ className, ...props }, ref) => (
 16 |   <LabelPrimitive.Root
 17 |     ref={ref}
 18 |     className={cn(labelVariants(), className)}
 19 |     {...props}
 20 |   />
 21 | ))
 22 | Label.displayName = LabelPrimitive.Root.displayName
 23 | 
 24 | export { Label }
 25 | "use client"
 26 | 
 27 | import * as React from "react"
 28 | import * as LabelPrimitive from "@radix-ui/react-label"
 29 | import { cva, type VariantProps } from "class-variance-authority"
 30 | import { cn } from "@/lib/utils"
 31 | 
 32 | const labelVariants = cva(
    :       ^^^^^^|^^^^^^
    :             `-- `labelVariants` redefined here
 33 |   "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
 34 | )
    `----

  x the name `Label` is defined multiple times
    ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/label.tsx:8:1]
  8 |   "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
  9 | )
 10 | 
 11 | const Label = React.forwardRef<
    :       ^^|^^
    :         `-- previous definition of `Label` here
 12 |   React.ElementRef<typeof LabelPrimitive.Root>,
 13 |   React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
 14 |     VariantProps<typeof labelVariants>
 15 | >(({ className, ...props }, ref) => (
 16 |   <LabelPrimitive.Root
 17 |     ref={ref}
 18 |     className={cn(labelVariants(), className)}
 19 |     {...props}
 20 |   />
 21 | ))
 22 | Label.displayName = LabelPrimitive.Root.displayName
 23 | 
 24 | export { Label }
 25 | "use client"
 26 | 
 27 | import * as React from "react"
 28 | import * as LabelPrimitive from "@radix-ui/react-label"
 29 | import { cva, type VariantProps } from "class-variance-authority"
 30 | import { cn } from "@/lib/utils"
 31 | 
 32 | const labelVariants = cva(
 33 |   "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
 34 | )
 35 | 
 36 | const Label = React.forwardRef<
    :       ^^|^^
    :         `-- `Label` redefined here
 37 |   React.ElementRef<typeof LabelPrimitive.Root>,
 38 |   React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
 39 |     VariantProps<typeof labelVariants>
    `----

  x the name `Label` is exported multiple times
    ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/label.tsx:21:1]
 21 | ))
 22 | Label.displayName = LabelPrimitive.Root.displayName
 23 | 
 24 | export { Label }
    :          ^^|^^
    :            `-- previous exported here
 25 | "use client"
 26 | 
 27 | import * as React from "react"
 28 | import * as LabelPrimitive from "@radix-ui/react-label"
 29 | import { cva, type VariantProps } from "class-variance-authority"
 30 | import { cn } from "@/lib/utils"
 31 | 
 32 | const labelVariants = cva(
 33 |   "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
 34 | )
 35 | 
 36 | const Label = React.forwardRef<
 37 |   React.ElementRef<typeof LabelPrimitive.Root>,
 38 |   React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
 39 |     VariantProps<typeof labelVariants>
 40 | >(({ className, ...props }, ref) => (
 41 |   <LabelPrimitive.Root
 42 |     ref={ref}
 43 |     className={cn(labelVariants(), className)}
 44 |     {...props}
 45 |   />
 46 | ))
 47 | Label.displayName = LabelPrimitive.Root.displayName
 48 | 
 49 | export { Label }
    :          ^^|^^
    :            `-- exported more than once
    `----

Error: 
  > Exported identifiers must be unique

  x The "use client" directive must be placed before other expressions. Move it to the top of the file to resolve this issue.
    ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/label.tsx:22:1]
 22 | Label.displayName = LabelPrimitive.Root.displayName
 23 | 
 24 | export { Label }
 25 | "use client"
    : ^^^^^^^^^^^^
 26 | 
 27 | import * as React from "react"
 28 | import * as LabelPrimitive from "@radix-ui/react-label"
    `----

Import trace for requested module:
./src/components/ui/label.tsx
./src/pages/Apply.tsx

./src/components/ui/select.tsx
Error: 
  x the name `Check` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:1:1]
   1 | import * as React from "react"
   2 | import * as SelectPrimitive from "@radix-ui/react-select"
   3 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
     :          ^^|^^
     :            `-- previous definition of `Check` here
   4 | 
   5 | import { cn } from "@/lib/utils"
   6 | 
   7 | const Select = SelectPrimitive.Root
   8 | 
   9 | const SelectGroup = SelectPrimitive.Group
  10 | 
  11 | const SelectValue = SelectPrimitive.Value
  12 | 
  13 | const SelectTrigger = React.forwardRef<
  14 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
  15 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
  16 | >(({ className, children, ...props }, ref) => (
  17 |   <SelectPrimitive.Trigger
  18 |     ref={ref}
  19 |     className={cn(
  20 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
  21 |       className
  22 |     )}
  23 |     {...props}
  24 |   >
  25 |     {children}
  26 |     <SelectPrimitive.Icon asChild>
  27 |       <ChevronDown className="h-4 w-4 opacity-50" />
  28 |     </SelectPrimitive.Icon>
  29 |   </SelectPrimitive.Trigger>
  30 | ))
  31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
  32 | 
  33 | const SelectScrollUpButton = React.forwardRef<
  34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
  36 | >(({ className, ...props }, ref) => (
  37 |   <SelectPrimitive.ScrollUpButton
  38 |     ref={ref}
  39 |     className={cn(
  40 |       "flex cursor-default items-center justify-center py-1",
  41 |       className
  42 |     )}
  43 |     {...props}
  44 |   >
  45 |     <ChevronUp className="h-4 w-4" />
  46 |   </SelectPrimitive.ScrollUpButton>
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
     :          ^^|^^
     :            `-- `Check` redefined here
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
     `----

  x the name `ChevronDown` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:1:1]
   1 | import * as React from "react"
   2 | import * as SelectPrimitive from "@radix-ui/react-select"
   3 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
     :                 ^^^^^|^^^^^
     :                      `-- previous definition of `ChevronDown` here
   4 | 
   5 | import { cn } from "@/lib/utils"
   6 | 
   7 | const Select = SelectPrimitive.Root
   8 | 
   9 | const SelectGroup = SelectPrimitive.Group
  10 | 
  11 | const SelectValue = SelectPrimitive.Value
  12 | 
  13 | const SelectTrigger = React.forwardRef<
  14 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
  15 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
  16 | >(({ className, children, ...props }, ref) => (
  17 |   <SelectPrimitive.Trigger
  18 |     ref={ref}
  19 |     className={cn(
  20 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
  21 |       className
  22 |     )}
  23 |     {...props}
  24 |   >
  25 |     {children}
  26 |     <SelectPrimitive.Icon asChild>
  27 |       <ChevronDown className="h-4 w-4 opacity-50" />
  28 |     </SelectPrimitive.Icon>
  29 |   </SelectPrimitive.Trigger>
  30 | ))
  31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
  32 | 
  33 | const SelectScrollUpButton = React.forwardRef<
  34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
  36 | >(({ className, ...props }, ref) => (
  37 |   <SelectPrimitive.ScrollUpButton
  38 |     ref={ref}
  39 |     className={cn(
  40 |       "flex cursor-default items-center justify-center py-1",
  41 |       className
  42 |     )}
  43 |     {...props}
  44 |   >
  45 |     <ChevronUp className="h-4 w-4" />
  46 |   </SelectPrimitive.ScrollUpButton>
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
     :                 ^^^^^|^^^^^
     :                      `-- `ChevronDown` redefined here
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
     `----

  x the name `ChevronUp` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:1:1]
   1 | import * as React from "react"
   2 | import * as SelectPrimitive from "@radix-ui/react-select"
   3 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
     :                              ^^^^|^^^^
     :                                  `-- previous definition of `ChevronUp` here
   4 | 
   5 | import { cn } from "@/lib/utils"
   6 | 
   7 | const Select = SelectPrimitive.Root
   8 | 
   9 | const SelectGroup = SelectPrimitive.Group
  10 | 
  11 | const SelectValue = SelectPrimitive.Value
  12 | 
  13 | const SelectTrigger = React.forwardRef<
  14 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
  15 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
  16 | >(({ className, children, ...props }, ref) => (
  17 |   <SelectPrimitive.Trigger
  18 |     ref={ref}
  19 |     className={cn(
  20 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
  21 |       className
  22 |     )}
  23 |     {...props}
  24 |   >
  25 |     {children}
  26 |     <SelectPrimitive.Icon asChild>
  27 |       <ChevronDown className="h-4 w-4 opacity-50" />
  28 |     </SelectPrimitive.Icon>
  29 |   </SelectPrimitive.Trigger>
  30 | ))
  31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
  32 | 
  33 | const SelectScrollUpButton = React.forwardRef<
  34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
  36 | >(({ className, ...props }, ref) => (
  37 |   <SelectPrimitive.ScrollUpButton
  38 |     ref={ref}
  39 |     className={cn(
  40 |       "flex cursor-default items-center justify-center py-1",
  41 |       className
  42 |     )}
  43 |     {...props}
  44 |   >
  45 |     <ChevronUp className="h-4 w-4" />
  46 |   </SelectPrimitive.ScrollUpButton>
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
     :                              ^^^^|^^^^
     :                                  `-- `ChevronUp` redefined here
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
     `----

  x the name `cn` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:2:1]
   2 | import * as SelectPrimitive from "@radix-ui/react-select"
   3 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
   4 | 
   5 | import { cn } from "@/lib/utils"
     :          ^|
     :           `-- previous definition of `cn` here
   6 | 
   7 | const Select = SelectPrimitive.Root
   8 | 
   9 | const SelectGroup = SelectPrimitive.Group
  10 | 
  11 | const SelectValue = SelectPrimitive.Value
  12 | 
  13 | const SelectTrigger = React.forwardRef<
  14 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
  15 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
  16 | >(({ className, children, ...props }, ref) => (
  17 |   <SelectPrimitive.Trigger
  18 |     ref={ref}
  19 |     className={cn(
  20 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
  21 |       className
  22 |     )}
  23 |     {...props}
  24 |   >
  25 |     {children}
  26 |     <SelectPrimitive.Icon asChild>
  27 |       <ChevronDown className="h-4 w-4 opacity-50" />
  28 |     </SelectPrimitive.Icon>
  29 |   </SelectPrimitive.Trigger>
  30 | ))
  31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
  32 | 
  33 | const SelectScrollUpButton = React.forwardRef<
  34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
  36 | >(({ className, ...props }, ref) => (
  37 |   <SelectPrimitive.ScrollUpButton
  38 |     ref={ref}
  39 |     className={cn(
  40 |       "flex cursor-default items-center justify-center py-1",
  41 |       className
  42 |     )}
  43 |     {...props}
  44 |   >
  45 |     <ChevronUp className="h-4 w-4" />
  46 |   </SelectPrimitive.ScrollUpButton>
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
     :          ^|
     :           `-- `cn` redefined here
 165 | 
 166 | const Select = SelectPrimitive.Root
     `----

  x the name `Select` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:4:1]
   4 | 
   5 | import { cn } from "@/lib/utils"
   6 | 
   7 | const Select = SelectPrimitive.Root
     :       ^^^|^^
     :          `-- previous definition of `Select` here
   8 | 
   9 | const SelectGroup = SelectPrimitive.Group
  10 | 
  11 | const SelectValue = SelectPrimitive.Value
  12 | 
  13 | const SelectTrigger = React.forwardRef<
  14 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
  15 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
  16 | >(({ className, children, ...props }, ref) => (
  17 |   <SelectPrimitive.Trigger
  18 |     ref={ref}
  19 |     className={cn(
  20 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
  21 |       className
  22 |     )}
  23 |     {...props}
  24 |   >
  25 |     {children}
  26 |     <SelectPrimitive.Icon asChild>
  27 |       <ChevronDown className="h-4 w-4 opacity-50" />
  28 |     </SelectPrimitive.Icon>
  29 |   </SelectPrimitive.Trigger>
  30 | ))
  31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
  32 | 
  33 | const SelectScrollUpButton = React.forwardRef<
  34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
  36 | >(({ className, ...props }, ref) => (
  37 |   <SelectPrimitive.ScrollUpButton
  38 |     ref={ref}
  39 |     className={cn(
  40 |       "flex cursor-default items-center justify-center py-1",
  41 |       className
  42 |     )}
  43 |     {...props}
  44 |   >
  45 |     <ChevronUp className="h-4 w-4" />
  46 |   </SelectPrimitive.ScrollUpButton>
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
     :       ^^^|^^
     :          `-- `Select` redefined here
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
     `----

  x the name `SelectGroup` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:6:1]
   6 | 
   7 | const Select = SelectPrimitive.Root
   8 | 
   9 | const SelectGroup = SelectPrimitive.Group
     :       ^^^^^|^^^^^
     :            `-- previous definition of `SelectGroup` here
  10 | 
  11 | const SelectValue = SelectPrimitive.Value
  12 | 
  13 | const SelectTrigger = React.forwardRef<
  14 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
  15 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
  16 | >(({ className, children, ...props }, ref) => (
  17 |   <SelectPrimitive.Trigger
  18 |     ref={ref}
  19 |     className={cn(
  20 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
  21 |       className
  22 |     )}
  23 |     {...props}
  24 |   >
  25 |     {children}
  26 |     <SelectPrimitive.Icon asChild>
  27 |       <ChevronDown className="h-4 w-4 opacity-50" />
  28 |     </SelectPrimitive.Icon>
  29 |   </SelectPrimitive.Trigger>
  30 | ))
  31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
  32 | 
  33 | const SelectScrollUpButton = React.forwardRef<
  34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
  36 | >(({ className, ...props }, ref) => (
  37 |   <SelectPrimitive.ScrollUpButton
  38 |     ref={ref}
  39 |     className={cn(
  40 |       "flex cursor-default items-center justify-center py-1",
  41 |       className
  42 |     )}
  43 |     {...props}
  44 |   >
  45 |     <ChevronUp className="h-4 w-4" />
  46 |   </SelectPrimitive.ScrollUpButton>
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
     :       ^^^^^|^^^^^
     :            `-- `SelectGroup` redefined here
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
     `----

  x the name `SelectValue` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:8:1]
   8 | 
   9 | const SelectGroup = SelectPrimitive.Group
  10 | 
  11 | const SelectValue = SelectPrimitive.Value
     :       ^^^^^|^^^^^
     :            `-- previous definition of `SelectValue` here
  12 | 
  13 | const SelectTrigger = React.forwardRef<
  14 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
  15 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
  16 | >(({ className, children, ...props }, ref) => (
  17 |   <SelectPrimitive.Trigger
  18 |     ref={ref}
  19 |     className={cn(
  20 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
  21 |       className
  22 |     )}
  23 |     {...props}
  24 |   >
  25 |     {children}
  26 |     <SelectPrimitive.Icon asChild>
  27 |       <ChevronDown className="h-4 w-4 opacity-50" />
  28 |     </SelectPrimitive.Icon>
  29 |   </SelectPrimitive.Trigger>
  30 | ))
  31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
  32 | 
  33 | const SelectScrollUpButton = React.forwardRef<
  34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
  36 | >(({ className, ...props }, ref) => (
  37 |   <SelectPrimitive.ScrollUpButton
  38 |     ref={ref}
  39 |     className={cn(
  40 |       "flex cursor-default items-center justify-center py-1",
  41 |       className
  42 |     )}
  43 |     {...props}
  44 |   >
  45 |     <ChevronUp className="h-4 w-4" />
  46 |   </SelectPrimitive.ScrollUpButton>
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
     :       ^^^^^|^^^^^
     :            `-- `SelectValue` redefined here
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
     `----

  x the name `SelectTrigger` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:10:1]
  10 | 
  11 | const SelectValue = SelectPrimitive.Value
  12 | 
  13 | const SelectTrigger = React.forwardRef<
     :       ^^^^^^|^^^^^^
     :             `-- previous definition of `SelectTrigger` here
  14 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
  15 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
  16 | >(({ className, children, ...props }, ref) => (
  17 |   <SelectPrimitive.Trigger
  18 |     ref={ref}
  19 |     className={cn(
  20 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
  21 |       className
  22 |     )}
  23 |     {...props}
  24 |   >
  25 |     {children}
  26 |     <SelectPrimitive.Icon asChild>
  27 |       <ChevronDown className="h-4 w-4 opacity-50" />
  28 |     </SelectPrimitive.Icon>
  29 |   </SelectPrimitive.Trigger>
  30 | ))
  31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
  32 | 
  33 | const SelectScrollUpButton = React.forwardRef<
  34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
  36 | >(({ className, ...props }, ref) => (
  37 |   <SelectPrimitive.ScrollUpButton
  38 |     ref={ref}
  39 |     className={cn(
  40 |       "flex cursor-default items-center justify-center py-1",
  41 |       className
  42 |     )}
  43 |     {...props}
  44 |   >
  45 |     <ChevronUp className="h-4 w-4" />
  46 |   </SelectPrimitive.ScrollUpButton>
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
     :       ^^^^^^|^^^^^^
     :             `-- `SelectTrigger` redefined here
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
     `----

  x the name `SelectScrollUpButton` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:30:1]
  30 | ))
  31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
  32 | 
  33 | const SelectScrollUpButton = React.forwardRef<
     :       ^^^^^^^^^^|^^^^^^^^^
     :                 `-- previous definition of `SelectScrollUpButton` here
  34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
  36 | >(({ className, ...props }, ref) => (
  37 |   <SelectPrimitive.ScrollUpButton
  38 |     ref={ref}
  39 |     className={cn(
  40 |       "flex cursor-default items-center justify-center py-1",
  41 |       className
  42 |     )}
  43 |     {...props}
  44 |   >
  45 |     <ChevronUp className="h-4 w-4" />
  46 |   </SelectPrimitive.ScrollUpButton>
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
     :       ^^^^^^^^^^|^^^^^^^^^
     :                 `-- `SelectScrollUpButton` redefined here
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
     `----

  x the name `SelectScrollDownButton` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:47:1]
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
     :       ^^^^^^^^^^^|^^^^^^^^^^
     :                  `-- previous definition of `SelectScrollDownButton` here
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
     :       ^^^^^^^^^^^|^^^^^^^^^^
     :                  `-- `SelectScrollDownButton` redefined here
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
     `----

  x the name `SelectContent` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:65:1]
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
     :       ^^^^^^|^^^^^^
     :             `-- previous definition of `SelectContent` here
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
     :       ^^^^^^|^^^^^^
     :             `-- `SelectContent` redefined here
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
     `----

  x the name `SelectLabel` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:97:1]
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
     :       ^^^^^|^^^^^
     :            `-- previous definition of `SelectLabel` here
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
     :       ^^^^^|^^^^^
     :            `-- `SelectLabel` redefined here
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
     `----

  x the name `SelectItem` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:109:1]
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
     :       ^^^^^|^^^^
     :            `-- previous definition of `SelectItem` here
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
     :       ^^^^^|^^^^
     :            `-- `SelectItem` redefined here
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
     `----

  x the name `SelectSeparator` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:132:1]
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
     :       ^^^^^^^|^^^^^^^
     :              `-- previous definition of `SelectSeparator` here
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
     :       ^^^^^^^|^^^^^^^
     :              `-- `SelectSeparator` redefined here
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
     `----

  x the name `Select` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:145:1]
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
     :   ^^^|^^
     :      `-- previous exported here
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
     :   ^^^|^^
     :      `-- exported more than once
 308 |   SelectGroup,
 309 |   SelectValue,
 310 |   SelectTrigger,
     `----

Error: 
  > Exported identifiers must be unique

  x the name `SelectGroup` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:146:1]
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
     :   ^^^^^|^^^^^
     :        `-- previous exported here
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
 308 |   SelectGroup,
     :   ^^^^^|^^^^^
     :        `-- exported more than once
 309 |   SelectValue,
 310 |   SelectTrigger,
 311 |   SelectContent,
     `----

Error: 
  > Exported identifiers must be unique

  x the name `SelectValue` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:147:1]
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
     :   ^^^^^|^^^^^
     :        `-- previous exported here
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
 308 |   SelectGroup,
 309 |   SelectValue,
     :   ^^^^^|^^^^^
     :        `-- exported more than once
 310 |   SelectTrigger,
 311 |   SelectContent,
 312 |   SelectLabel,
     `----

Error: 
  > Exported identifiers must be unique

  x the name `SelectTrigger` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:148:1]
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
     :   ^^^^^^|^^^^^^
     :         `-- previous exported here
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
 308 |   SelectGroup,
 309 |   SelectValue,
 310 |   SelectTrigger,
     :   ^^^^^^|^^^^^^
     :         `-- exported more than once
 311 |   SelectContent,
 312 |   SelectLabel,
 313 |   SelectItem,
     `----

Error: 
  > Exported identifiers must be unique

  x the name `SelectContent` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:149:1]
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
     :   ^^^^^^|^^^^^^
     :         `-- previous exported here
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
 308 |   SelectGroup,
 309 |   SelectValue,
 310 |   SelectTrigger,
 311 |   SelectContent,
     :   ^^^^^^|^^^^^^
     :         `-- exported more than once
 312 |   SelectLabel,
 313 |   SelectItem,
 314 |   SelectSeparator,
     `----

Error: 
  > Exported identifiers must be unique

  x the name `SelectLabel` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:150:1]
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
     :   ^^^^^|^^^^^
     :        `-- previous exported here
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
 308 |   SelectGroup,
 309 |   SelectValue,
 310 |   SelectTrigger,
 311 |   SelectContent,
 312 |   SelectLabel,
     :   ^^^^^|^^^^^
     :        `-- exported more than once
 313 |   SelectItem,
 314 |   SelectSeparator,
 315 |   SelectScrollUpButton,
     `----

Error: 
  > Exported identifiers must be unique

  x the name `SelectItem` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:151:1]
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
     :   ^^^^^|^^^^
     :        `-- previous exported here
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
 308 |   SelectGroup,
 309 |   SelectValue,
 310 |   SelectTrigger,
 311 |   SelectContent,
 312 |   SelectLabel,
 313 |   SelectItem,
     :   ^^^^^|^^^^
     :        `-- exported more than once
 314 |   SelectSeparator,
 315 |   SelectScrollUpButton,
 316 |   SelectScrollDownButton,
     `----

Error: 
  > Exported identifiers must be unique

  x the name `SelectSeparator` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:152:1]
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
     :   ^^^^^^^|^^^^^^^
     :          `-- previous exported here
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
 308 |   SelectGroup,
 309 |   SelectValue,
 310 |   SelectTrigger,
 311 |   SelectContent,
 312 |   SelectLabel,
 313 |   SelectItem,
 314 |   SelectSeparator,
     :   ^^^^^^^|^^^^^^^
     :          `-- exported more than once
 315 |   SelectScrollUpButton,
 316 |   SelectScrollDownButton,
 317 | }
     `----

Error: 
  > Exported identifiers must be unique

  x the name `SelectScrollUpButton` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:153:1]
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
     :   ^^^^^^^^^^|^^^^^^^^^
     :             `-- previous exported here
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
 308 |   SelectGroup,
 309 |   SelectValue,
 310 |   SelectTrigger,
 311 |   SelectContent,
 312 |   SelectLabel,
 313 |   SelectItem,
 314 |   SelectSeparator,
 315 |   SelectScrollUpButton,
     :   ^^^^^^^^^^|^^^^^^^^^
     :             `-- exported more than once
 316 |   SelectScrollDownButton,
 317 | }
     `----

Error: 
  > Exported identifiers must be unique

  x the name `SelectScrollDownButton` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:154:1]
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
     :   ^^^^^^^^^^^|^^^^^^^^^^
     :              `-- previous exported here
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
 308 |   SelectGroup,
 309 |   SelectValue,
 310 |   SelectTrigger,
 311 |   SelectContent,
 312 |   SelectLabel,
 313 |   SelectItem,
 314 |   SelectSeparator,
 315 |   SelectScrollUpButton,
 316 |   SelectScrollDownButton,
     :   ^^^^^^^^^^^|^^^^^^^^^^
     :              `-- exported more than once
 317 | }
     `----

Error: 
  > Exported identifiers must be unique

  x The "use client" directive must be placed before other expressions. Move it to the top of the file to resolve this issue.
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:156:1]
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
     : ^^^^^^^^^^^^
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
     `----

Import trace for requested module:
./src/components/ui/select.tsx
./src/pages/Apply.tsx

./src/components/ui/tabs.tsx
Error: 
  x the name `cn` is defined multiple times
    ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/tabs.tsx:2:1]
  2 | import * as React from "react"
  3 | import * as TabsPrimitive from "@radix-ui/react-tabs"
  4 | 
  5 | import { cn } from "@/lib/utils"
    :          ^|
    :           `-- previous definition of `cn` here
  6 | 
  7 | const Tabs = TabsPrimitive.Root
  8 | 
  9 | const TabsList = React.forwardRef<
 10 |   React.ElementRef<typeof TabsPrimitive.List>,
 11 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
 12 | >(({ className, ...props }, ref) => (
 13 |   <TabsPrimitive.List
 14 |     ref={ref}
 15 |     className={cn(
 16 |       "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
 17 |       className
 18 |     )}
 19 |     {...props}
 20 |   />
 21 | ))
 22 | TabsList.displayName = TabsPrimitive.List.displayName
 23 | 
 24 | const TabsTrigger = React.forwardRef<
 25 |   React.ElementRef<typeof TabsPrimitive.Trigger>,
 26 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
 27 | >(({ className, ...props }, ref) => (
 28 |   <TabsPrimitive.Trigger
 29 |     ref={ref}
 30 |     className={cn(
 31 |       "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
 32 |       className
 33 |     )}
 34 |     {...props}
 35 |   />
 36 | ))
 37 | TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
 38 | 
 39 | const TabsContent = React.forwardRef<
 40 |   React.ElementRef<typeof TabsPrimitive.Content>,
 41 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
 42 | >(({ className, ...props }, ref) => (
 43 |   <TabsPrimitive.Content
 44 |     ref={ref}
 45 |     className={cn(
 46 |       "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
 47 |       className
 48 |     )}
 49 |     {...props}
 50 |   />
 51 | ))
 52 | TabsContent.displayName = TabsPrimitive.Content.displayName
 53 | 
 54 | export { Tabs, TabsList, TabsTrigger, TabsContent }
 55 | "use client"
 56 | 
 57 | import * as React from "react"
 58 | import * as TabsPrimitive from "@radix-ui/react-tabs"
 59 | import { cn } from "@/lib/utils"
    :          ^|
    :           `-- `cn` redefined here
 60 | 
 61 | const Tabs = TabsPrimitive.Root
    `----

  x the name `Tabs` is defined multiple times
    ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/tabs.tsx:4:1]
  4 | 
  5 | import { cn } from "@/lib/utils"
  6 | 
  7 | const Tabs = TabsPrimitive.Root
    :       ^^|^
    :         `-- previous definition of `Tabs` here
  8 | 
  9 | const TabsList = React.forwardRef<
 10 |   React.ElementRef<typeof TabsPrimitive.List>,
 11 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
 12 | >(({ className, ...props }, ref) => (
 13 |   <TabsPrimitive.List
 14 |     ref={ref}
 15 |     className={cn(
 16 |       "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
 17 |       className
 18 |     )}
 19 |     {...props}
 20 |   />
 21 | ))
 22 | TabsList.displayName = TabsPrimitive.List.displayName
 23 | 
 24 | const TabsTrigger = React.forwardRef<
 25 |   React.ElementRef<typeof TabsPrimitive.Trigger>,
 26 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
 27 | >(({ className, ...props }, ref) => (
 28 |   <TabsPrimitive.Trigger
 29 |     ref={ref}
 30 |     className={cn(
 31 |       "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
 32 |       className
 33 |     )}
 34 |     {...props}
 35 |   />
 36 | ))
 37 | TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
 38 | 
 39 | const TabsContent = React.forwardRef<
 40 |   React.ElementRef<typeof TabsPrimitive.Content>,
 41 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
 42 | >(({ className, ...props }, ref) => (
 43 |   <TabsPrimitive.Content
 44 |     ref={ref}
 45 |     className={cn(
 46 |       "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
 47 |       className
 48 |     )}
 49 |     {...props}
 50 |   />
 51 | ))
 52 | TabsContent.displayName = TabsPrimitive.Content.displayName
 53 | 
 54 | export { Tabs, TabsList, TabsTrigger, TabsContent }
 55 | "use client"
 56 | 
 57 | import * as React from "react"
 58 | import * as TabsPrimitive from "@radix-ui/react-tabs"
 59 | import { cn } from "@/lib/utils"
 60 | 
 61 | const Tabs = TabsPrimitive.Root
    :       ^^|^
    :         `-- `Tabs` redefined here
 62 | 
 63 | const TabsList = React.forwardRef<
 64 |   React.ElementRef<typeof TabsPrimitive.List>,
    `----

  x the name `TabsList` is defined multiple times
    ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/tabs.tsx:6:1]
  6 | 
  7 | const Tabs = TabsPrimitive.Root
  8 | 
  9 | const TabsList = React.forwardRef<
    :       ^^^^|^^^
    :           `-- previous definition of `TabsList` here
 10 |   React.ElementRef<typeof TabsPrimitive.List>,
 11 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
 12 | >(({ className, ...props }, ref) => (
 13 |   <TabsPrimitive.List
 14 |     ref={ref}
 15 |     className={cn(
 16 |       "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
 17 |       className
 18 |     )}
 19 |     {...props}
 20 |   />
 21 | ))
 22 | TabsList.displayName = TabsPrimitive.List.displayName
 23 | 
 24 | const TabsTrigger = React.forwardRef<
 25 |   React.ElementRef<typeof TabsPrimitive.Trigger>,
 26 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
 27 | >(({ className, ...props }, ref) => (
 28 |   <TabsPrimitive.Trigger
 29 |     ref={ref}
 30 |     className={cn(
 31 |       "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
 32 |       className
 33 |     )}
 34 |     {...props}
 35 |   />
 36 | ))
 37 | TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
 38 | 
 39 | const TabsContent = React.forwardRef<
 40 |   React.ElementRef<typeof TabsPrimitive.Content>,
 41 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
 42 | >(({ className, ...props }, ref) => (
 43 |   <TabsPrimitive.Content
 44 |     ref={ref}
 45 |     className={cn(
 46 |       "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
 47 |       className
 48 |     )}
 49 |     {...props}
 50 |   />
 51 | ))
 52 | TabsContent.displayName = TabsPrimitive.Content.displayName
 53 | 
 54 | export { Tabs, TabsList, TabsTrigger, TabsContent }
 55 | "use client"
 56 | 
 57 | import * as React from "react"
 58 | import * as TabsPrimitive from "@radix-ui/react-tabs"
 59 | import { cn } from "@/lib/utils"
 60 | 
 61 | const Tabs = TabsPrimitive.Root
 62 | 
 63 | const TabsList = React.forwardRef<
    :       ^^^^|^^^
    :           `-- `TabsList` redefined here
 64 |   React.ElementRef<typeof TabsPrimitive.List>,
 65 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
 66 | >(({ className, ...props }, ref) => (
    `----

  x the name `TabsTrigger` is defined multiple times
    ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/tabs.tsx:21:1]
 21 | ))
 22 | TabsList.displayName = TabsPrimitive.List.displayName
 23 | 
 24 | const TabsTrigger = React.forwardRef<
    :       ^^^^^|^^^^^
    :            `-- previous definition of `TabsTrigger` here
 25 |   React.ElementRef<typeof TabsPrimitive.Trigger>,
 26 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
 27 | >(({ className, ...props }, ref) => (
 28 |   <TabsPrimitive.Trigger
 29 |     ref={ref}
 30 |     className={cn(
 31 |       "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
 32 |       className
 33 |     )}
 34 |     {...props}
 35 |   />
 36 | ))
 37 | TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
 38 | 
 39 | const TabsContent = React.forwardRef<
 40 |   React.ElementRef<typeof TabsPrimitive.Content>,
 41 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
 42 | >(({ className, ...props }, ref) => (
 43 |   <TabsPrimitive.Content
 44 |     ref={ref}
 45 |     className={cn(
 46 |       "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
 47 |       className
 48 |     )}
 49 |     {...props}
 50 |   />
 51 | ))
 52 | TabsContent.displayName = TabsPrimitive.Content.displayName
 53 | 
 54 | export { Tabs, TabsList, TabsTrigger, TabsContent }
 55 | "use client"
 56 | 
 57 | import * as React from "react"
 58 | import * as TabsPrimitive from "@radix-ui/react-tabs"
 59 | import { cn } from "@/lib/utils"
 60 | 
 61 | const Tabs = TabsPrimitive.Root
 62 | 
 63 | const TabsList = React.forwardRef<
 64 |   React.ElementRef<typeof TabsPrimitive.List>,
 65 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
 66 | >(({ className, ...props }, ref) => (
 67 |   <TabsPrimitive.List
 68 |     ref={ref}
 69 |     className={cn(
 70 |       "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
 71 |       className
 72 |     )}
 73 |     {...props}
 74 |   />
 75 | ))
 76 | TabsList.displayName = TabsPrimitive.List.displayName
 77 | 
 78 | const TabsTrigger = React.forwardRef<
    :       ^^^^^|^^^^^
    :            `-- `TabsTrigger` redefined here
 79 |   React.ElementRef<typeof TabsPrimitive.Trigger>,
 80 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
 81 | >(({ className, ...props }, ref) => (
    `----

  x the name `TabsContent` is defined multiple times
    ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/tabs.tsx:36:1]
 36 | ))
 37 | TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
 38 | 
 39 | const TabsContent = React.forwardRef<
    :       ^^^^^|^^^^^
    :            `-- previous definition of `TabsContent` here
 40 |   React.ElementRef<typeof TabsPrimitive.Content>,
 41 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
 42 | >(({ className, ...props }, ref) => (
 43 |   <TabsPrimitive.Content
 44 |     ref={ref}
 45 |     className={cn(
 46 |       "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
 47 |       className
 48 |     )}
 49 |     {...props}
 50 |   />
 51 | ))
 52 | TabsContent.displayName = TabsPrimitive.Content.displayName
 53 | 
 54 | export { Tabs, TabsList, TabsTrigger, TabsContent }
 55 | "use client"
 56 | 
 57 | import * as React from "react"
 58 | import * as TabsPrimitive from "@radix-ui/react-tabs"
 59 | import { cn } from "@/lib/utils"
 60 | 
 61 | const Tabs = TabsPrimitive.Root
 62 | 
 63 | const TabsList = React.forwardRef<
 64 |   React.ElementRef<typeof TabsPrimitive.List>,
 65 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
 66 | >(({ className, ...props }, ref) => (
 67 |   <TabsPrimitive.List
 68 |     ref={ref}
 69 |     className={cn(
 70 |       "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
 71 |       className
 72 |     )}
 73 |     {...props}
 74 |   />
 75 | ))
 76 | TabsList.displayName = TabsPrimitive.List.displayName
 77 | 
 78 | const TabsTrigger = React.forwardRef<
 79 |   React.ElementRef<typeof TabsPrimitive.Trigger>,
 80 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
 81 | >(({ className, ...props }, ref) => (
 82 |   <TabsPrimitive.Trigger
 83 |     ref={ref}
 84 |     className={cn(
 85 |       "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
 86 |       className
 87 |     )}
 88 |     {...props}
 89 |   />
 90 | ))
 91 | TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
 92 | 
 93 | const TabsContent = React.forwardRef<
    :       ^^^^^|^^^^^
    :            `-- `TabsContent` redefined here
 94 |   React.ElementRef<typeof TabsPrimitive.Content>,
 95 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
 96 | >(({ className, ...props }, ref) => (
    `----

  x the name `Tabs` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/tabs.tsx:51:1]
  51 | ))
  52 | TabsContent.displayName = TabsPrimitive.Content.displayName
  53 | 
  54 | export { Tabs, TabsList, TabsTrigger, TabsContent }
     :          ^^|^
     :            `-- previous exported here
  55 | "use client"
  56 | 
  57 | import * as React from "react"
  58 | import * as TabsPrimitive from "@radix-ui/react-tabs"
  59 | import { cn } from "@/lib/utils"
  60 | 
  61 | const Tabs = TabsPrimitive.Root
  62 | 
  63 | const TabsList = React.forwardRef<
  64 |   React.ElementRef<typeof TabsPrimitive.List>,
  65 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
  66 | >(({ className, ...props }, ref) => (
  67 |   <TabsPrimitive.List
  68 |     ref={ref}
  69 |     className={cn(
  70 |       "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
  71 |       className
  72 |     )}
  73 |     {...props}
  74 |   />
  75 | ))
  76 | TabsList.displayName = TabsPrimitive.List.displayName
  77 | 
  78 | const TabsTrigger = React.forwardRef<
  79 |   React.ElementRef<typeof TabsPrimitive.Trigger>,
  80 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
  81 | >(({ className, ...props }, ref) => (
  82 |   <TabsPrimitive.Trigger
  83 |     ref={ref}
  84 |     className={cn(
  85 |       "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
  86 |       className
  87 |     )}
  88 |     {...props}
  89 |   />
  90 | ))
  91 | TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
  92 | 
  93 | const TabsContent = React.forwardRef<
  94 |   React.ElementRef<typeof TabsPrimitive.Content>,
  95 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
  96 | >(({ className, ...props }, ref) => (
  97 |   <TabsPrimitive.Content
  98 |     ref={ref}
  99 |     className={cn(
 100 |       "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
 101 |       className
 102 |     )}
 103 |     {...props}
 104 |   />
 105 | ))
 106 | TabsContent.displayName = TabsPrimitive.Content.displayName
 107 | 
 108 | export { Tabs, TabsList, TabsTrigger, TabsContent }
     :          ^^|^
     :            `-- exported more than once
     `----

Error: 
  > Exported identifiers must be unique

  x the name `TabsList` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/tabs.tsx:51:1]
  51 | ))
  52 | TabsContent.displayName = TabsPrimitive.Content.displayName
  53 | 
  54 | export { Tabs, TabsList, TabsTrigger, TabsContent }
     :                ^^^^|^^^
     :                    `-- previous exported here
  55 | "use client"
  56 | 
  57 | import * as React from "react"
  58 | import * as TabsPrimitive from "@radix-ui/react-tabs"
  59 | import { cn } from "@/lib/utils"
  60 | 
  61 | const Tabs = TabsPrimitive.Root
  62 | 
  63 | const TabsList = React.forwardRef<
  64 |   React.ElementRef<typeof TabsPrimitive.List>,
  65 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
  66 | >(({ className, ...props }, ref) => (
  67 |   <TabsPrimitive.List
  68 |     ref={ref}
  69 |     className={cn(
  70 |       "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
  71 |       className
  72 |     )}
  73 |     {...props}
  74 |   />
  75 | ))
  76 | TabsList.displayName = TabsPrimitive.List.displayName
  77 | 
  78 | const TabsTrigger = React.forwardRef<
  79 |   React.ElementRef<typeof TabsPrimitive.Trigger>,
  80 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
  81 | >(({ className, ...props }, ref) => (
  82 |   <TabsPrimitive.Trigger
  83 |     ref={ref}
  84 |     className={cn(
  85 |       "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
  86 |       className
  87 |     )}
  88 |     {...props}
  89 |   />
  90 | ))
  91 | TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
  92 | 
  93 | const TabsContent = React.forwardRef<
  94 |   React.ElementRef<typeof TabsPrimitive.Content>,
  95 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
  96 | >(({ className, ...props }, ref) => (
  97 |   <TabsPrimitive.Content
  98 |     ref={ref}
  99 |     className={cn(
 100 |       "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
 101 |       className
 102 |     )}
 103 |     {...props}
 104 |   />
 105 | ))
 106 | TabsContent.displayName = TabsPrimitive.Content.displayName
 107 | 
 108 | export { Tabs, TabsList, TabsTrigger, TabsContent }
     :                ^^^^|^^^
     :                    `-- exported more than once
     `----

Error: 
  > Exported identifiers must be unique

  x the name `TabsTrigger` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/tabs.tsx:51:1]
  51 | ))
  52 | TabsContent.displayName = TabsPrimitive.Content.displayName
  53 | 
  54 | export { Tabs, TabsList, TabsTrigger, TabsContent }
     :                          ^^^^^|^^^^^
     :                               `-- previous exported here
  55 | "use client"
  56 | 
  57 | import * as React from "react"
  58 | import * as TabsPrimitive from "@radix-ui/react-tabs"
  59 | import { cn } from "@/lib/utils"
  60 | 
  61 | const Tabs = TabsPrimitive.Root
  62 | 
  63 | const TabsList = React.forwardRef<
  64 |   React.ElementRef<typeof TabsPrimitive.List>,
  65 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
  66 | >(({ className, ...props }, ref) => (
  67 |   <TabsPrimitive.List
  68 |     ref={ref}
  69 |     className={cn(
  70 |       "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
  71 |       className
  72 |     )}
  73 |     {...props}
  74 |   />
  75 | ))
  76 | TabsList.displayName = TabsPrimitive.List.displayName
  77 | 
  78 | const TabsTrigger = React.forwardRef<
  79 |   React.ElementRef<typeof TabsPrimitive.Trigger>,
  80 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
  81 | >(({ className, ...props }, ref) => (
  82 |   <TabsPrimitive.Trigger
  83 |     ref={ref}
  84 |     className={cn(
  85 |       "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
  86 |       className
  87 |     )}
  88 |     {...props}
  89 |   />
  90 | ))
  91 | TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
  92 | 
  93 | const TabsContent = React.forwardRef<
  94 |   React.ElementRef<typeof TabsPrimitive.Content>,
  95 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
  96 | >(({ className, ...props }, ref) => (
  97 |   <TabsPrimitive.Content
  98 |     ref={ref}
  99 |     className={cn(
 100 |       "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
 101 |       className
 102 |     )}
 103 |     {...props}
 104 |   />
 105 | ))
 106 | TabsContent.displayName = TabsPrimitive.Content.displayName
 107 | 
 108 | export { Tabs, TabsList, TabsTrigger, TabsContent }
     :                          ^^^^^|^^^^^
     :                               `-- exported more than once
     `----

Error: 
  > Exported identifiers must be unique

  x the name `TabsContent` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/tabs.tsx:51:1]
  51 | ))
  52 | TabsContent.displayName = TabsPrimitive.Content.displayName
  53 | 
  54 | export { Tabs, TabsList, TabsTrigger, TabsContent }
     :                                       ^^^^^|^^^^^
     :                                            `-- previous exported here
  55 | "use client"
  56 | 
  57 | import * as React from "react"
  58 | import * as TabsPrimitive from "@radix-ui/react-tabs"
  59 | import { cn } from "@/lib/utils"
  60 | 
  61 | const Tabs = TabsPrimitive.Root
  62 | 
  63 | const TabsList = React.forwardRef<
  64 |   React.ElementRef<typeof TabsPrimitive.List>,
  65 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
  66 | >(({ className, ...props }, ref) => (
  67 |   <TabsPrimitive.List
  68 |     ref={ref}
  69 |     className={cn(
  70 |       "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
  71 |       className
  72 |     )}
  73 |     {...props}
  74 |   />
  75 | ))
  76 | TabsList.displayName = TabsPrimitive.List.displayName
  77 | 
  78 | const TabsTrigger = React.forwardRef<
  79 |   React.ElementRef<typeof TabsPrimitive.Trigger>,
  80 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
  81 | >(({ className, ...props }, ref) => (
  82 |   <TabsPrimitive.Trigger
  83 |     ref={ref}
  84 |     className={cn(
  85 |       "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
  86 |       className
  87 |     )}
  88 |     {...props}
  89 |   />
  90 | ))
  91 | TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
  92 | 
  93 | const TabsContent = React.forwardRef<
  94 |   React.ElementRef<typeof TabsPrimitive.Content>,
  95 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
  96 | >(({ className, ...props }, ref) => (
  97 |   <TabsPrimitive.Content
  98 |     ref={ref}
  99 |     className={cn(
 100 |       "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
 101 |       className
 102 |     )}
 103 |     {...props}
 104 |   />
 105 | ))
 106 | TabsContent.displayName = TabsPrimitive.Content.displayName
 107 | 
 108 | export { Tabs, TabsList, TabsTrigger, TabsContent }
     :                                       ^^^^^|^^^^^
     :                                            `-- exported more than once
     `----

Error: 
  > Exported identifiers must be unique

  x The "use client" directive must be placed before other expressions. Move it to the top of the file to resolve this issue.
    ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/tabs.tsx:52:1]
 52 | TabsContent.displayName = TabsPrimitive.Content.displayName
 53 | 
 54 | export { Tabs, TabsList, TabsTrigger, TabsContent }
 55 | "use client"
    : ^^^^^^^^^^^^
 56 | 
 57 | import * as React from "react"
 58 | import * as TabsPrimitive from "@radix-ui/react-tabs"
    `----

Import trace for requested module:
./src/components/ui/tabs.tsx
./src/pages/Admin.tsx

./src/components/ui/label.tsx
Error: 
  x the name `cva` is defined multiple times
    ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/label.tsx:1:1]
  1 | import * as React from "react"
  2 | import * as LabelPrimitive from "@radix-ui/react-label"
  3 | import { cva, type VariantProps } from "class-variance-authority"
    :          ^|^
    :           `-- previous definition of `cva` here
  4 | 
  5 | import { cn } from "@/lib/utils"
  6 | 
  7 | const labelVariants = cva(
  8 |   "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
  9 | )
 10 | 
 11 | const Label = React.forwardRef<
 12 |   React.ElementRef<typeof LabelPrimitive.Root>,
 13 |   React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
 14 |     VariantProps<typeof labelVariants>
 15 | >(({ className, ...props }, ref) => (
 16 |   <LabelPrimitive.Root
 17 |     ref={ref}
 18 |     className={cn(labelVariants(), className)}
 19 |     {...props}
 20 |   />
 21 | ))
 22 | Label.displayName = LabelPrimitive.Root.displayName
 23 | 
 24 | export { Label }
 25 | "use client"
 26 | 
 27 | import * as React from "react"
 28 | import * as LabelPrimitive from "@radix-ui/react-label"
 29 | import { cva, type VariantProps } from "class-variance-authority"
    :          ^|^
    :           `-- `cva` redefined here
 30 | import { cn } from "@/lib/utils"
 31 | 
 32 | const labelVariants = cva(
    `----

  x the name `cn` is defined multiple times
    ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/label.tsx:2:1]
  2 | import * as LabelPrimitive from "@radix-ui/react-label"
  3 | import { cva, type VariantProps } from "class-variance-authority"
  4 | 
  5 | import { cn } from "@/lib/utils"
    :          ^|
    :           `-- previous definition of `cn` here
  6 | 
  7 | const labelVariants = cva(
  8 |   "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
  9 | )
 10 | 
 11 | const Label = React.forwardRef<
 12 |   React.ElementRef<typeof LabelPrimitive.Root>,
 13 |   React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
 14 |     VariantProps<typeof labelVariants>
 15 | >(({ className, ...props }, ref) => (
 16 |   <LabelPrimitive.Root
 17 |     ref={ref}
 18 |     className={cn(labelVariants(), className)}
 19 |     {...props}
 20 |   />
 21 | ))
 22 | Label.displayName = LabelPrimitive.Root.displayName
 23 | 
 24 | export { Label }
 25 | "use client"
 26 | 
 27 | import * as React from "react"
 28 | import * as LabelPrimitive from "@radix-ui/react-label"
 29 | import { cva, type VariantProps } from "class-variance-authority"
 30 | import { cn } from "@/lib/utils"
    :          ^|
    :           `-- `cn` redefined here
 31 | 
 32 | const labelVariants = cva(
 33 |   "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
    `----

  x the name `labelVariants` is defined multiple times
    ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/label.tsx:4:1]
  4 | 
  5 | import { cn } from "@/lib/utils"
  6 | 
  7 | const labelVariants = cva(
    :       ^^^^^^|^^^^^^
    :             `-- previous definition of `labelVariants` here
  8 |   "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
  9 | )
 10 | 
 11 | const Label = React.forwardRef<
 12 |   React.ElementRef<typeof LabelPrimitive.Root>,
 13 |   React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
 14 |     VariantProps<typeof labelVariants>
 15 | >(({ className, ...props }, ref) => (
 16 |   <LabelPrimitive.Root
 17 |     ref={ref}
 18 |     className={cn(labelVariants(), className)}
 19 |     {...props}
 20 |   />
 21 | ))
 22 | Label.displayName = LabelPrimitive.Root.displayName
 23 | 
 24 | export { Label }
 25 | "use client"
 26 | 
 27 | import * as React from "react"
 28 | import * as LabelPrimitive from "@radix-ui/react-label"
 29 | import { cva, type VariantProps } from "class-variance-authority"
 30 | import { cn } from "@/lib/utils"
 31 | 
 32 | const labelVariants = cva(
    :       ^^^^^^|^^^^^^
    :             `-- `labelVariants` redefined here
 33 |   "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
 34 | )
    `----

  x the name `Label` is defined multiple times
    ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/label.tsx:8:1]
  8 |   "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
  9 | )
 10 | 
 11 | const Label = React.forwardRef<
    :       ^^|^^
    :         `-- previous definition of `Label` here
 12 |   React.ElementRef<typeof LabelPrimitive.Root>,
 13 |   React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
 14 |     VariantProps<typeof labelVariants>
 15 | >(({ className, ...props }, ref) => (
 16 |   <LabelPrimitive.Root
 17 |     ref={ref}
 18 |     className={cn(labelVariants(), className)}
 19 |     {...props}
 20 |   />
 21 | ))
 22 | Label.displayName = LabelPrimitive.Root.displayName
 23 | 
 24 | export { Label }
 25 | "use client"
 26 | 
 27 | import * as React from "react"
 28 | import * as LabelPrimitive from "@radix-ui/react-label"
 29 | import { cva, type VariantProps } from "class-variance-authority"
 30 | import { cn } from "@/lib/utils"
 31 | 
 32 | const labelVariants = cva(
 33 |   "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
 34 | )
 35 | 
 36 | const Label = React.forwardRef<
    :       ^^|^^
    :         `-- `Label` redefined here
 37 |   React.ElementRef<typeof LabelPrimitive.Root>,
 38 |   React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
 39 |     VariantProps<typeof labelVariants>
    `----

  x the name `Label` is exported multiple times
    ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/label.tsx:21:1]
 21 | ))
 22 | Label.displayName = LabelPrimitive.Root.displayName
 23 | 
 24 | export { Label }
    :          ^^|^^
    :            `-- previous exported here
 25 | "use client"
 26 | 
 27 | import * as React from "react"
 28 | import * as LabelPrimitive from "@radix-ui/react-label"
 29 | import { cva, type VariantProps } from "class-variance-authority"
 30 | import { cn } from "@/lib/utils"
 31 | 
 32 | const labelVariants = cva(
 33 |   "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
 34 | )
 35 | 
 36 | const Label = React.forwardRef<
 37 |   React.ElementRef<typeof LabelPrimitive.Root>,
 38 |   React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
 39 |     VariantProps<typeof labelVariants>
 40 | >(({ className, ...props }, ref) => (
 41 |   <LabelPrimitive.Root
 42 |     ref={ref}
 43 |     className={cn(labelVariants(), className)}
 44 |     {...props}
 45 |   />
 46 | ))
 47 | Label.displayName = LabelPrimitive.Root.displayName
 48 | 
 49 | export { Label }
    :          ^^|^^
    :            `-- exported more than once
    `----

Error: 
  > Exported identifiers must be unique

  x The "use client" directive must be placed before other expressions. Move it to the top of the file to resolve this issue.
    ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/label.tsx:22:1]
 22 | Label.displayName = LabelPrimitive.Root.displayName
 23 | 
 24 | export { Label }
 25 | "use client"
    : ^^^^^^^^^^^^
 26 | 
 27 | import * as React from "react"
 28 | import * as LabelPrimitive from "@radix-ui/react-label"
    `----

Import trace for requested module:
./src/components/ui/label.tsx
./src/app/auth/page.tsx

./src/components/ui/select.tsx
Error: 
  x the name `Check` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:1:1]
   1 | import * as React from "react"
   2 | import * as SelectPrimitive from "@radix-ui/react-select"
   3 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
     :          ^^|^^
     :            `-- previous definition of `Check` here
   4 | 
   5 | import { cn } from "@/lib/utils"
   6 | 
   7 | const Select = SelectPrimitive.Root
   8 | 
   9 | const SelectGroup = SelectPrimitive.Group
  10 | 
  11 | const SelectValue = SelectPrimitive.Value
  12 | 
  13 | const SelectTrigger = React.forwardRef<
  14 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
  15 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
  16 | >(({ className, children, ...props }, ref) => (
  17 |   <SelectPrimitive.Trigger
  18 |     ref={ref}
  19 |     className={cn(
  20 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
  21 |       className
  22 |     )}
  23 |     {...props}
  24 |   >
  25 |     {children}
  26 |     <SelectPrimitive.Icon asChild>
  27 |       <ChevronDown className="h-4 w-4 opacity-50" />
  28 |     </SelectPrimitive.Icon>
  29 |   </SelectPrimitive.Trigger>
  30 | ))
  31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
  32 | 
  33 | const SelectScrollUpButton = React.forwardRef<
  34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
  36 | >(({ className, ...props }, ref) => (
  37 |   <SelectPrimitive.ScrollUpButton
  38 |     ref={ref}
  39 |     className={cn(
  40 |       "flex cursor-default items-center justify-center py-1",
  41 |       className
  42 |     )}
  43 |     {...props}
  44 |   >
  45 |     <ChevronUp className="h-4 w-4" />
  46 |   </SelectPrimitive.ScrollUpButton>
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
     :          ^^|^^
     :            `-- `Check` redefined here
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
     `----

  x the name `ChevronDown` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:1:1]
   1 | import * as React from "react"
   2 | import * as SelectPrimitive from "@radix-ui/react-select"
   3 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
     :                 ^^^^^|^^^^^
     :                      `-- previous definition of `ChevronDown` here
   4 | 
   5 | import { cn } from "@/lib/utils"
   6 | 
   7 | const Select = SelectPrimitive.Root
   8 | 
   9 | const SelectGroup = SelectPrimitive.Group
  10 | 
  11 | const SelectValue = SelectPrimitive.Value
  12 | 
  13 | const SelectTrigger = React.forwardRef<
  14 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
  15 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
  16 | >(({ className, children, ...props }, ref) => (
  17 |   <SelectPrimitive.Trigger
  18 |     ref={ref}
  19 |     className={cn(
  20 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
  21 |       className
  22 |     )}
  23 |     {...props}
  24 |   >
  25 |     {children}
  26 |     <SelectPrimitive.Icon asChild>
  27 |       <ChevronDown className="h-4 w-4 opacity-50" />
  28 |     </SelectPrimitive.Icon>
  29 |   </SelectPrimitive.Trigger>
  30 | ))
  31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
  32 | 
  33 | const SelectScrollUpButton = React.forwardRef<
  34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
  36 | >(({ className, ...props }, ref) => (
  37 |   <SelectPrimitive.ScrollUpButton
  38 |     ref={ref}
  39 |     className={cn(
  40 |       "flex cursor-default items-center justify-center py-1",
  41 |       className
  42 |     )}
  43 |     {...props}
  44 |   >
  45 |     <ChevronUp className="h-4 w-4" />
  46 |   </SelectPrimitive.ScrollUpButton>
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
     :                 ^^^^^|^^^^^
     :                      `-- `ChevronDown` redefined here
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
     `----

  x the name `ChevronUp` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:1:1]
   1 | import * as React from "react"
   2 | import * as SelectPrimitive from "@radix-ui/react-select"
   3 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
     :                              ^^^^|^^^^
     :                                  `-- previous definition of `ChevronUp` here
   4 | 
   5 | import { cn } from "@/lib/utils"
   6 | 
   7 | const Select = SelectPrimitive.Root
   8 | 
   9 | const SelectGroup = SelectPrimitive.Group
  10 | 
  11 | const SelectValue = SelectPrimitive.Value
  12 | 
  13 | const SelectTrigger = React.forwardRef<
  14 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
  15 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
  16 | >(({ className, children, ...props }, ref) => (
  17 |   <SelectPrimitive.Trigger
  18 |     ref={ref}
  19 |     className={cn(
  20 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
  21 |       className
  22 |     )}
  23 |     {...props}
  24 |   >
  25 |     {children}
  26 |     <SelectPrimitive.Icon asChild>
  27 |       <ChevronDown className="h-4 w-4 opacity-50" />
  28 |     </SelectPrimitive.Icon>
  29 |   </SelectPrimitive.Trigger>
  30 | ))
  31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
  32 | 
  33 | const SelectScrollUpButton = React.forwardRef<
  34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
  36 | >(({ className, ...props }, ref) => (
  37 |   <SelectPrimitive.ScrollUpButton
  38 |     ref={ref}
  39 |     className={cn(
  40 |       "flex cursor-default items-center justify-center py-1",
  41 |       className
  42 |     )}
  43 |     {...props}
  44 |   >
  45 |     <ChevronUp className="h-4 w-4" />
  46 |   </SelectPrimitive.ScrollUpButton>
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
     :                              ^^^^|^^^^
     :                                  `-- `ChevronUp` redefined here
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
     `----

  x the name `cn` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:2:1]
   2 | import * as SelectPrimitive from "@radix-ui/react-select"
   3 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
   4 | 
   5 | import { cn } from "@/lib/utils"
     :          ^|
     :           `-- previous definition of `cn` here
   6 | 
   7 | const Select = SelectPrimitive.Root
   8 | 
   9 | const SelectGroup = SelectPrimitive.Group
  10 | 
  11 | const SelectValue = SelectPrimitive.Value
  12 | 
  13 | const SelectTrigger = React.forwardRef<
  14 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
  15 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
  16 | >(({ className, children, ...props }, ref) => (
  17 |   <SelectPrimitive.Trigger
  18 |     ref={ref}
  19 |     className={cn(
  20 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
  21 |       className
  22 |     )}
  23 |     {...props}
  24 |   >
  25 |     {children}
  26 |     <SelectPrimitive.Icon asChild>
  27 |       <ChevronDown className="h-4 w-4 opacity-50" />
  28 |     </SelectPrimitive.Icon>
  29 |   </SelectPrimitive.Trigger>
  30 | ))
  31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
  32 | 
  33 | const SelectScrollUpButton = React.forwardRef<
  34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
  36 | >(({ className, ...props }, ref) => (
  37 |   <SelectPrimitive.ScrollUpButton
  38 |     ref={ref}
  39 |     className={cn(
  40 |       "flex cursor-default items-center justify-center py-1",
  41 |       className
  42 |     )}
  43 |     {...props}
  44 |   >
  45 |     <ChevronUp className="h-4 w-4" />
  46 |   </SelectPrimitive.ScrollUpButton>
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
     :          ^|
     :           `-- `cn` redefined here
 165 | 
 166 | const Select = SelectPrimitive.Root
     `----

  x the name `Select` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:4:1]
   4 | 
   5 | import { cn } from "@/lib/utils"
   6 | 
   7 | const Select = SelectPrimitive.Root
     :       ^^^|^^
     :          `-- previous definition of `Select` here
   8 | 
   9 | const SelectGroup = SelectPrimitive.Group
  10 | 
  11 | const SelectValue = SelectPrimitive.Value
  12 | 
  13 | const SelectTrigger = React.forwardRef<
  14 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
  15 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
  16 | >(({ className, children, ...props }, ref) => (
  17 |   <SelectPrimitive.Trigger
  18 |     ref={ref}
  19 |     className={cn(
  20 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
  21 |       className
  22 |     )}
  23 |     {...props}
  24 |   >
  25 |     {children}
  26 |     <SelectPrimitive.Icon asChild>
  27 |       <ChevronDown className="h-4 w-4 opacity-50" />
  28 |     </SelectPrimitive.Icon>
  29 |   </SelectPrimitive.Trigger>
  30 | ))
  31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
  32 | 
  33 | const SelectScrollUpButton = React.forwardRef<
  34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
  36 | >(({ className, ...props }, ref) => (
  37 |   <SelectPrimitive.ScrollUpButton
  38 |     ref={ref}
  39 |     className={cn(
  40 |       "flex cursor-default items-center justify-center py-1",
  41 |       className
  42 |     )}
  43 |     {...props}
  44 |   >
  45 |     <ChevronUp className="h-4 w-4" />
  46 |   </SelectPrimitive.ScrollUpButton>
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
     :       ^^^|^^
     :          `-- `Select` redefined here
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
     `----

  x the name `SelectGroup` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:6:1]
   6 | 
   7 | const Select = SelectPrimitive.Root
   8 | 
   9 | const SelectGroup = SelectPrimitive.Group
     :       ^^^^^|^^^^^
     :            `-- previous definition of `SelectGroup` here
  10 | 
  11 | const SelectValue = SelectPrimitive.Value
  12 | 
  13 | const SelectTrigger = React.forwardRef<
  14 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
  15 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
  16 | >(({ className, children, ...props }, ref) => (
  17 |   <SelectPrimitive.Trigger
  18 |     ref={ref}
  19 |     className={cn(
  20 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
  21 |       className
  22 |     )}
  23 |     {...props}
  24 |   >
  25 |     {children}
  26 |     <SelectPrimitive.Icon asChild>
  27 |       <ChevronDown className="h-4 w-4 opacity-50" />
  28 |     </SelectPrimitive.Icon>
  29 |   </SelectPrimitive.Trigger>
  30 | ))
  31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
  32 | 
  33 | const SelectScrollUpButton = React.forwardRef<
  34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
  36 | >(({ className, ...props }, ref) => (
  37 |   <SelectPrimitive.ScrollUpButton
  38 |     ref={ref}
  39 |     className={cn(
  40 |       "flex cursor-default items-center justify-center py-1",
  41 |       className
  42 |     )}
  43 |     {...props}
  44 |   >
  45 |     <ChevronUp className="h-4 w-4" />
  46 |   </SelectPrimitive.ScrollUpButton>
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
     :       ^^^^^|^^^^^
     :            `-- `SelectGroup` redefined here
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
     `----

  x the name `SelectValue` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:8:1]
   8 | 
   9 | const SelectGroup = SelectPrimitive.Group
  10 | 
  11 | const SelectValue = SelectPrimitive.Value
     :       ^^^^^|^^^^^
     :            `-- previous definition of `SelectValue` here
  12 | 
  13 | const SelectTrigger = React.forwardRef<
  14 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
  15 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
  16 | >(({ className, children, ...props }, ref) => (
  17 |   <SelectPrimitive.Trigger
  18 |     ref={ref}
  19 |     className={cn(
  20 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
  21 |       className
  22 |     )}
  23 |     {...props}
  24 |   >
  25 |     {children}
  26 |     <SelectPrimitive.Icon asChild>
  27 |       <ChevronDown className="h-4 w-4 opacity-50" />
  28 |     </SelectPrimitive.Icon>
  29 |   </SelectPrimitive.Trigger>
  30 | ))
  31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
  32 | 
  33 | const SelectScrollUpButton = React.forwardRef<
  34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
  36 | >(({ className, ...props }, ref) => (
  37 |   <SelectPrimitive.ScrollUpButton
  38 |     ref={ref}
  39 |     className={cn(
  40 |       "flex cursor-default items-center justify-center py-1",
  41 |       className
  42 |     )}
  43 |     {...props}
  44 |   >
  45 |     <ChevronUp className="h-4 w-4" />
  46 |   </SelectPrimitive.ScrollUpButton>
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
     :       ^^^^^|^^^^^
     :            `-- `SelectValue` redefined here
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
     `----

  x the name `SelectTrigger` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:10:1]
  10 | 
  11 | const SelectValue = SelectPrimitive.Value
  12 | 
  13 | const SelectTrigger = React.forwardRef<
     :       ^^^^^^|^^^^^^
     :             `-- previous definition of `SelectTrigger` here
  14 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
  15 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
  16 | >(({ className, children, ...props }, ref) => (
  17 |   <SelectPrimitive.Trigger
  18 |     ref={ref}
  19 |     className={cn(
  20 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
  21 |       className
  22 |     )}
  23 |     {...props}
  24 |   >
  25 |     {children}
  26 |     <SelectPrimitive.Icon asChild>
  27 |       <ChevronDown className="h-4 w-4 opacity-50" />
  28 |     </SelectPrimitive.Icon>
  29 |   </SelectPrimitive.Trigger>
  30 | ))
  31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
  32 | 
  33 | const SelectScrollUpButton = React.forwardRef<
  34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
  36 | >(({ className, ...props }, ref) => (
  37 |   <SelectPrimitive.ScrollUpButton
  38 |     ref={ref}
  39 |     className={cn(
  40 |       "flex cursor-default items-center justify-center py-1",
  41 |       className
  42 |     )}
  43 |     {...props}
  44 |   >
  45 |     <ChevronUp className="h-4 w-4" />
  46 |   </SelectPrimitive.ScrollUpButton>
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
     :       ^^^^^^|^^^^^^
     :             `-- `SelectTrigger` redefined here
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
     `----

  x the name `SelectScrollUpButton` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:30:1]
  30 | ))
  31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
  32 | 
  33 | const SelectScrollUpButton = React.forwardRef<
     :       ^^^^^^^^^^|^^^^^^^^^
     :                 `-- previous definition of `SelectScrollUpButton` here
  34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
  36 | >(({ className, ...props }, ref) => (
  37 |   <SelectPrimitive.ScrollUpButton
  38 |     ref={ref}
  39 |     className={cn(
  40 |       "flex cursor-default items-center justify-center py-1",
  41 |       className
  42 |     )}
  43 |     {...props}
  44 |   >
  45 |     <ChevronUp className="h-4 w-4" />
  46 |   </SelectPrimitive.ScrollUpButton>
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
     :       ^^^^^^^^^^|^^^^^^^^^
     :                 `-- `SelectScrollUpButton` redefined here
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
     `----

  x the name `SelectScrollDownButton` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:47:1]
  47 | ))
  48 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
  49 | 
  50 | const SelectScrollDownButton = React.forwardRef<
     :       ^^^^^^^^^^^|^^^^^^^^^^
     :                  `-- previous definition of `SelectScrollDownButton` here
  51 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  52 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
  53 | >(({ className, ...props }, ref) => (
  54 |   <SelectPrimitive.ScrollDownButton
  55 |     ref={ref}
  56 |     className={cn(
  57 |       "flex cursor-default items-center justify-center py-1",
  58 |       className
  59 |     )}
  60 |     {...props}
  61 |   >
  62 |     <ChevronDown className="h-4 w-4" />
  63 |   </SelectPrimitive.ScrollDownButton>
  64 | ))
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
     :       ^^^^^^^^^^^|^^^^^^^^^^
     :                  `-- `SelectScrollDownButton` redefined here
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
     `----

  x the name `SelectContent` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:65:1]
  65 | SelectScrollDownButton.displayName =
  66 |   SelectPrimitive.ScrollDownButton.displayName
  67 | 
  68 | const SelectContent = React.forwardRef<
     :       ^^^^^^|^^^^^^
     :             `-- previous definition of `SelectContent` here
  69 |   React.ElementRef<typeof SelectPrimitive.Content>,
  70 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
  71 | >(({ className, children, position = "popper", ...props }, ref) => (
  72 |   <SelectPrimitive.Portal>
  73 |     <SelectPrimitive.Content
  74 |       ref={ref}
  75 |       className={cn(
  76 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  77 |         position === "popper" &&
  78 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
  79 |         className
  80 |       )}
  81 |       position={position}
  82 |       {...props}
  83 |     >
  84 |       <SelectScrollUpButton />
  85 |       <SelectPrimitive.Viewport
  86 |         className={cn(
  87 |           "p-1",
  88 |           position === "popper" &&
  89 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
  90 |         )}
  91 |       >
  92 |         {children}
  93 |       </SelectPrimitive.Viewport>
  94 |       <SelectScrollDownButton />
  95 |     </SelectPrimitive.Content>
  96 |   </SelectPrimitive.Portal>
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
     :       ^^^^^^|^^^^^^
     :             `-- `SelectContent` redefined here
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
     `----

  x the name `SelectLabel` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:97:1]
  97 | ))
  98 | SelectContent.displayName = SelectPrimitive.Content.displayName
  99 | 
 100 | const SelectLabel = React.forwardRef<
     :       ^^^^^|^^^^^
     :            `-- previous definition of `SelectLabel` here
 101 |   React.ElementRef<typeof SelectPrimitive.Label>,
 102 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 103 | >(({ className, ...props }, ref) => (
 104 |   <SelectPrimitive.Label
 105 |     ref={ref}
 106 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 107 |     {...props}
 108 |   />
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
     :       ^^^^^|^^^^^
     :            `-- `SelectLabel` redefined here
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
     `----

  x the name `SelectItem` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:109:1]
 109 | ))
 110 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 111 | 
 112 | const SelectItem = React.forwardRef<
     :       ^^^^^|^^^^
     :            `-- previous definition of `SelectItem` here
 113 |   React.ElementRef<typeof SelectPrimitive.Item>,
 114 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 115 | >(({ className, children, ...props }, ref) => (
 116 |   <SelectPrimitive.Item
 117 |     ref={ref}
 118 |     className={cn(
 119 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 120 |       className
 121 |     )}
 122 |     {...props}
 123 |   >
 124 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 125 |       <SelectPrimitive.ItemIndicator>
 126 |         <Check className="h-4 w-4" />
 127 |       </SelectPrimitive.ItemIndicator>
 128 |     </span>
 129 | 
 130 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 131 |   </SelectPrimitive.Item>
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
     :       ^^^^^|^^^^
     :            `-- `SelectItem` redefined here
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
     `----

  x the name `SelectSeparator` is defined multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:132:1]
 132 | ))
 133 | SelectItem.displayName = SelectPrimitive.Item.displayName
 134 | 
 135 | const SelectSeparator = React.forwardRef<
     :       ^^^^^^^|^^^^^^^
     :              `-- previous definition of `SelectSeparator` here
 136 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 137 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 138 | >(({ className, ...props }, ref) => (
 139 |   <SelectPrimitive.Separator
 140 |     ref={ref}
 141 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 142 |     {...props}
 143 |   />
 144 | ))
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
     :       ^^^^^^^|^^^^^^^
     :              `-- `SelectSeparator` redefined here
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
     `----

  x the name `Select` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:145:1]
 145 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 146 | 
 147 | export {
 148 |   Select,
     :   ^^^|^^
     :      `-- previous exported here
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
     :   ^^^|^^
     :      `-- exported more than once
 308 |   SelectGroup,
 309 |   SelectValue,
 310 |   SelectTrigger,
     `----

Error: 
  > Exported identifiers must be unique

  x the name `SelectGroup` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:146:1]
 146 | 
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
     :   ^^^^^|^^^^^
     :        `-- previous exported here
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
 308 |   SelectGroup,
     :   ^^^^^|^^^^^
     :        `-- exported more than once
 309 |   SelectValue,
 310 |   SelectTrigger,
 311 |   SelectContent,
     `----

Error: 
  > Exported identifiers must be unique

  x the name `SelectValue` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:147:1]
 147 | export {
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
     :   ^^^^^|^^^^^
     :        `-- previous exported here
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
 308 |   SelectGroup,
 309 |   SelectValue,
     :   ^^^^^|^^^^^
     :        `-- exported more than once
 310 |   SelectTrigger,
 311 |   SelectContent,
 312 |   SelectLabel,
     `----

Error: 
  > Exported identifiers must be unique

  x the name `SelectTrigger` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:148:1]
 148 |   Select,
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
     :   ^^^^^^|^^^^^^
     :         `-- previous exported here
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
 308 |   SelectGroup,
 309 |   SelectValue,
 310 |   SelectTrigger,
     :   ^^^^^^|^^^^^^
     :         `-- exported more than once
 311 |   SelectContent,
 312 |   SelectLabel,
 313 |   SelectItem,
     `----

Error: 
  > Exported identifiers must be unique

  x the name `SelectContent` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:149:1]
 149 |   SelectGroup,
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
     :   ^^^^^^|^^^^^^
     :         `-- previous exported here
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
 308 |   SelectGroup,
 309 |   SelectValue,
 310 |   SelectTrigger,
 311 |   SelectContent,
     :   ^^^^^^|^^^^^^
     :         `-- exported more than once
 312 |   SelectLabel,
 313 |   SelectItem,
 314 |   SelectSeparator,
     `----

Error: 
  > Exported identifiers must be unique

  x the name `SelectLabel` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:150:1]
 150 |   SelectValue,
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
     :   ^^^^^|^^^^^
     :        `-- previous exported here
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
 308 |   SelectGroup,
 309 |   SelectValue,
 310 |   SelectTrigger,
 311 |   SelectContent,
 312 |   SelectLabel,
     :   ^^^^^|^^^^^
     :        `-- exported more than once
 313 |   SelectItem,
 314 |   SelectSeparator,
 315 |   SelectScrollUpButton,
     `----

Error: 
  > Exported identifiers must be unique

  x the name `SelectItem` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:151:1]
 151 |   SelectTrigger,
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
     :   ^^^^^|^^^^
     :        `-- previous exported here
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
 308 |   SelectGroup,
 309 |   SelectValue,
 310 |   SelectTrigger,
 311 |   SelectContent,
 312 |   SelectLabel,
 313 |   SelectItem,
     :   ^^^^^|^^^^
     :        `-- exported more than once
 314 |   SelectSeparator,
 315 |   SelectScrollUpButton,
 316 |   SelectScrollDownButton,
     `----

Error: 
  > Exported identifiers must be unique

  x the name `SelectSeparator` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:152:1]
 152 |   SelectContent,
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
     :   ^^^^^^^|^^^^^^^
     :          `-- previous exported here
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
 308 |   SelectGroup,
 309 |   SelectValue,
 310 |   SelectTrigger,
 311 |   SelectContent,
 312 |   SelectLabel,
 313 |   SelectItem,
 314 |   SelectSeparator,
     :   ^^^^^^^|^^^^^^^
     :          `-- exported more than once
 315 |   SelectScrollUpButton,
 316 |   SelectScrollDownButton,
 317 | }
     `----

Error: 
  > Exported identifiers must be unique

  x the name `SelectScrollUpButton` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:153:1]
 153 |   SelectLabel,
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
     :   ^^^^^^^^^^|^^^^^^^^^
     :             `-- previous exported here
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
 308 |   SelectGroup,
 309 |   SelectValue,
 310 |   SelectTrigger,
 311 |   SelectContent,
 312 |   SelectLabel,
 313 |   SelectItem,
 314 |   SelectSeparator,
 315 |   SelectScrollUpButton,
     :   ^^^^^^^^^^|^^^^^^^^^
     :             `-- exported more than once
 316 |   SelectScrollDownButton,
 317 | }
     `----

Error: 
  > Exported identifiers must be unique

  x the name `SelectScrollDownButton` is exported multiple times
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:154:1]
 154 |   SelectItem,
 155 |   SelectSeparator,
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
     :   ^^^^^^^^^^^|^^^^^^^^^^
     :              `-- previous exported here
 158 | }
 159 | "use client"
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
 163 | import { Check, ChevronDown, ChevronUp } from "lucide-react"
 164 | import { cn } from "@/lib/utils"
 165 | 
 166 | const Select = SelectPrimitive.Root
 167 | 
 168 | const SelectGroup = SelectPrimitive.Group
 169 | 
 170 | const SelectValue = SelectPrimitive.Value
 171 | 
 172 | const SelectTrigger = React.forwardRef<
 173 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 174 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 175 | >(({ className, children, ...props }, ref) => (
 176 |   <SelectPrimitive.Trigger
 177 |     ref={ref}
 178 |     className={cn(
 179 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 180 |       className
 181 |     )}
 182 |     {...props}
 183 |   >
 184 |     {children}
 185 |     <SelectPrimitive.Icon asChild>
 186 |       <ChevronDown className="h-4 w-4 opacity-50" />
 187 |     </SelectPrimitive.Icon>
 188 |   </SelectPrimitive.Trigger>
 189 | ))
 190 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
 191 | 
 192 | const SelectScrollUpButton = React.forwardRef<
 193 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 194 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 195 | >(({ className, ...props }, ref) => (
 196 |   <SelectPrimitive.ScrollUpButton
 197 |     ref={ref}
 198 |     className={cn(
 199 |       "flex cursor-default items-center justify-center py-1",
 200 |       className
 201 |     )}
 202 |     {...props}
 203 |   >
 204 |     <ChevronUp className="h-4 w-4" />
 205 |   </SelectPrimitive.ScrollUpButton>
 206 | ))
 207 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
 208 | 
 209 | const SelectScrollDownButton = React.forwardRef<
 210 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 211 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 212 | >(({ className, ...props }, ref) => (
 213 |   <SelectPrimitive.ScrollDownButton
 214 |     ref={ref}
 215 |     className={cn(
 216 |       "flex cursor-default items-center justify-center py-1",
 217 |       className
 218 |     )}
 219 |     {...props}
 220 |   >
 221 |     <ChevronDown className="h-4 w-4" />
 222 |   </SelectPrimitive.ScrollDownButton>
 223 | ))
 224 | SelectScrollDownButton.displayName =
 225 |   SelectPrimitive.ScrollDownButton.displayName
 226 | 
 227 | const SelectContent = React.forwardRef<
 228 |   React.ElementRef<typeof SelectPrimitive.Content>,
 229 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 230 | >(({ className, children, position = "popper", ...props }, ref) => (
 231 |   <SelectPrimitive.Portal>
 232 |     <SelectPrimitive.Content
 233 |       ref={ref}
 234 |       className={cn(
 235 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 236 |         position === "popper" &&
 237 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 238 |         className
 239 |       )}
 240 |       position={position}
 241 |       {...props}
 242 |     >
 243 |       <SelectScrollUpButton />
 244 |       <SelectPrimitive.Viewport
 245 |         className={cn(
 246 |           "p-1",
 247 |           position === "popper" &&
 248 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
 249 |         )}
 250 |       >
 251 |         {children}
 252 |       </SelectPrimitive.Viewport>
 253 |       <SelectScrollDownButton />
 254 |     </SelectPrimitive.Content>
 255 |   </SelectPrimitive.Portal>
 256 | ))
 257 | SelectContent.displayName = SelectPrimitive.Content.displayName
 258 | 
 259 | const SelectLabel = React.forwardRef<
 260 |   React.ElementRef<typeof SelectPrimitive.Label>,
 261 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 262 | >(({ className, ...props }, ref) => (
 263 |   <SelectPrimitive.Label
 264 |     ref={ref}
 265 |     className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
 266 |     {...props}
 267 |   />
 268 | ))
 269 | SelectLabel.displayName = SelectPrimitive.Label.displayName
 270 | 
 271 | const SelectItem = React.forwardRef<
 272 |   React.ElementRef<typeof SelectPrimitive.Item>,
 273 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
 274 | >(({ className, children, ...props }, ref) => (
 275 |   <SelectPrimitive.Item
 276 |     ref={ref}
 277 |     className={cn(
 278 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
 279 |       className
 280 |     )}
 281 |     {...props}
 282 |   >
 283 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
 284 |       <SelectPrimitive.ItemIndicator>
 285 |         <Check className="h-4 w-4" />
 286 |       </SelectPrimitive.ItemIndicator>
 287 |     </span>
 288 | 
 289 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
 290 |   </SelectPrimitive.Item>
 291 | ))
 292 | SelectItem.displayName = SelectPrimitive.Item.displayName
 293 | 
 294 | const SelectSeparator = React.forwardRef<
 295 |   React.ElementRef<typeof SelectPrimitive.Separator>,
 296 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
 297 | >(({ className, ...props }, ref) => (
 298 |   <SelectPrimitive.Separator
 299 |     ref={ref}
 300 |     className={cn("-mx-1 my-1 h-px bg-muted", className)}
 301 |     {...props}
 302 |   />
 303 | ))
 304 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName
 305 | 
 306 | export {
 307 |   Select,
 308 |   SelectGroup,
 309 |   SelectValue,
 310 |   SelectTrigger,
 311 |   SelectContent,
 312 |   SelectLabel,
 313 |   SelectItem,
 314 |   SelectSeparator,
 315 |   SelectScrollUpButton,
 316 |   SelectScrollDownButton,
     :   ^^^^^^^^^^^|^^^^^^^^^^
     :              `-- exported more than once
 317 | }
     `----

Error: 
  > Exported identifiers must be unique

  x The "use client" directive must be placed before other expressions. Move it to the top of the file to resolve this issue.
     ,-[/Users/dev/personal/job-flow-applicant-view/src/components/ui/select.tsx:156:1]
 156 |   SelectScrollUpButton,
 157 |   SelectScrollDownButton,
 158 | }
 159 | "use client"
     : ^^^^^^^^^^^^
 160 | 
 161 | import * as React from "react"
 162 | import * as SelectPrimitive from "@radix-ui/react-select"
     `----

Import trace for requested module:
./src/components/ui/select.tsx
./src/app/auth/page.tsx


> Build failed because of webpack errors